@mixin breakpoint($size) {
    @media only screen and (max-width: $size) { @content; }
}

@mixin breakpoint-landscape($size) {
    @media only screen and (max-width: $size) and (orientation: 'landscape') { @content; }
}

@mixin breakpoint-height($size) {
    @media only screen and (max-height: $size) { @content; }
}

@mixin linear-gradient($dir, $color-a, $color-b) {
    background: -moz-linear-gradient($dir, $color-a 0%, $color-b 100%) repeat scroll 0 0;
    background: -webkit-linear-gradient($dir, $color-a 0%, $color-b 100%) repeat scroll 0 0;
    background: -ms-linear-gradient($dir, $color-a 0%, $color-b 100%) repeat scroll 0 0;
    background: linear-gradient($dir, $color-a 0%, $color-b 100%) repeat scroll 0 0;
}

@mixin border-top-radius($val) {
    border-top-left-radius: $val;
    border-top-right-radius: $val;
}

@mixin border-bottom-radius($val) {
    border-bottom-left-radius: $val;
    border-bottom-right-radius: $val;
}

@mixin arrow($size, $color, $direction) {
    //used to generate css arrows
    border-style: solid;
    @if $direction == 'up' {
        border-width: 0 $size $size;
        border-color: transparent transparent $color;
    } @else if $direction == 'left' {
        border-width: $size $size $size 0;
        border-color: transparent  $color transparent transparent;
    } @else if $direction == 'right' {
        border-width: $size 0 $size $size;
        border-color: transparent transparent transparent $color;
    } @else {
        border-width: $size $size 0;
        border-color: $color transparent transparent;
    }
}

// ------ FLEXBOX -------

@mixin flexbox {
    display: -webkit-box;
    display: -webkit-flex;
    display: -moz-flex;
    display: -ms-flexbox;
    display: flex;
}

@mixin flex-wrap($value: nowrap) {
    // No Webkit Box fallback.
    -webkit-flex-wrap: $value;
    -moz-flex-wrap: $value;
    @if $value == nowrap {
        -ms-flex-wrap: none;
    } @else {
        -ms-flex-wrap: $value;
    }
    flex-wrap: $value;
}

@mixin flex-basis($value: auto) {
    -webkit-flex-basis: $value;
    -moz-flex-basis: $value;
    -ms-flex-preferred-size: $value;
    flex-basis: $value;
}

@mixin flex-grow($int: 0) {
    -webkit-box-flex: $int;
    -webkit-flex-grow: $int;
    -moz-flex-grow: $int;
    -ms-flex-positive: $int;
    flex-grow: $int;
}

@mixin flex-shrink($int: 0) {
    -webkit-flex-shrink: $int;
    -ms-flex-negative: $int;
    flex-shrink: $int;
}

@mixin flex-direction($value: row) {
    @if $value == row {
        -webkit-box-orient: vertical;
    } @else {
        -webkit-box-orient: horizontal;
    }
    -webkit-box-direction: normal;
    -webkit-flex-direction: $value;
    -ms-flex-direction: $value;
    flex-direction: $value;
}

@mixin order($int: 0) {
    -webkit-box-ordinal-group: $int + 1;
    -webkit-order: $int;
    -moz-order: $int;
    -ms-flex-order: $int;
    order: $int;
}

@mixin justify-content($justify: flex-start) {
    -webkit-justify-content: $justify;
    -moz-justify-content: $justify;
    -ms-justify-content: $justify;
    -ms-flex-pack: $justify;
    justify-content: $justify;
}

// ------ TYPOGRAPHY -------

@mixin font-size-h1 {
    font-size: rem(35px);
    line-height: rem(40px);
}

@mixin font-size-h2 {
    font-size: rem(26px);
    line-height: rem(31px);
}

@mixin font-size-h3 {
    font-size: rem(20px);
    line-height: rem(25px);
}

@mixin font-size-h4 {
    font-size: rem(18px);
    line-height: rem(25px);
}

@mixin font-size-h5 {
    font-size: rem(16px);
    line-height: rem(23px);
}

@mixin font-size-paragraph {
    font-size: rem(16px);
    line-height: rem(26px);
}

@mixin font-size-paragraph-small {
    font-size: rem(14px);
    line-height: rem(20px);
}
